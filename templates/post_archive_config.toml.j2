### opencast configuration begin

# Variables for accessing Opencast
# Make sure change these to your Opencast installation
[opencast]
# Server URL
# Example: server = 'https://develop.opencast.org'
server = '{{ bbb_oc_opencast_server }}'

# User credentials allowed to ingest via HTTP basic
# Example: user = 'username'
# Example: password = 'password'
user = '{{ bbb_oc_opencast_user }}'
password = '{{ bbb_oc_opencast_password }}'

# Workflow to use for ingest
# Example: workflow = 'bbb-upload'
workflow = '{{ bbb_oc_opencast_workflow }}'


# Which additional files you want to send to Opencastr
[addFiles]
# Send the webcam recordings to Opencast.
# If your Opencast is any version earlier than 9.1, you MUST set this to false.
# Default: true
webcamTracks = {{ bbb_oc_webcam_tracks | ternary('true', 'false') }}

# Adds the shared notes etherpad from a meeting to the attachments in Opencast
# Default: false
sharedNotesEtherpadAsAttachment = {{ bbb_oc_shared_notes_etherpad_as_attachment | ternary('true', 'false') }}

# Adds the shared notes as HTML from a meeting to the attachments in Opencast
# Default: false
sharedNotesHmtlAsAttachment = {{ bbb_oc_shared_notes_html_as_attachment | ternary('true', 'false') }}

# Adds the shared notes as PDF from a meeting to the attachments in Opencast
# Default: false
sharedNotesPdfAsAttachment = {{ bbb_oc_shared_notes_pdf_as_attachment | ternary('true', 'false') }}

# Adds the public chat from a meeting to the attachments in Opencast as a subtitle file
# Default: false
chatAsSubtitleAttachment = {{ bbb_oc_chat_as_subtitle_attachment | ternary('true', 'false') }}

# Add all uploaded presentations from a meeting to the attachments in Opencast as PDF files.
# Please make sure to use this feature respectfully.
# Default: false
presentationsAsPdf = {{ bbb_oc_presentations_as_pdf | ternary('true', 'false') }}


# If and how the script should delete raw recording files from BBB
[cleanUp]
# Removes the raw recording data from BBB if the script sent all the data to Opencast successfully.
# Set to false if there are other post_archive scripts after this one, or else they will
# likely fail due to the missing data.
# Although data will only ever be deleted after the script was successful and the first thing
# Opencast does (in the bbb-upload Workflow) is to make a snapshot of all the data it got,
# there may still be edge cases where data loss can occur. If you absolutely cannot accept
# any data loss, set this option to false.
# Default: true
deleteIfSuccessful = {{ bbb_oc_delete_if_successful | ternary('true', 'false') }}

# Marks the raw recording data for deletion by the BBB clean-up cron job.
# This will have no effect if the cron job is disabled.
# This will have no effect if "deleteIfSuccessful" is set to true.
# Default: false
deleteByBBBCron = {{ bbb_oc_delete_by_bbbcron | ternary('true', 'false') }}


# Allows you to add default Opencast roles to every recording
[defaultRoles]
# Default roles for the event, e.g. "ROLE_OAUTH_USER, ROLE_USER_BOB"
# Default: ""
readPerm = "{{ bbb_oc_read_perm }}"
writePerm = "{{ bbb_oc_write_perm }}"

# Default roles for the series, e.g. "ROLE_OAUTH_USER, ROLE_USER_BOB"
# Default: ""
seriesReadPerm = "{{ bbb_oc_series_read_perm }}"
seriesWritePerm = "{{ bbb_oc_series_write_perm }}"


# Various other options
[miscellaneous]
# Whether a new series should be created if the given one does not exist yet
# Default: false
createNewSeriesIfItDoesNotYetExist = {{ bbb_oc_create_new_series_if_it_does_not_yet_exist | ternary('true', 'false') }}

# Whether to skip processing if no series ID was submitted as meeting metadata
# Default: true
skipProcessingIfNoSeriesIdSet = {{ bbb_oc_skip_processing_if_no_series_id_set | ternary('true', 'false') }}

# The given dublincore identifier will also passed to the dublincore source tag,
# even if the given identifier cannot be used as the actual identifier for the vent
# Default: false
passIdentifierAsDcSource = {{ bbb_oc_pass_identifier_as_dc_source | ternary('true', 'false') }}

# Default: false
onlyIngestIfRecordButtonWasPressed = {{ bbb_oc_only_ingest_if_record_button_was_pressed | ternary('true', 'false') }}

# If a converted video already exists, don't overwrite it
# This can save time when having to run this script on the same input multiple times
# Default: false
doNotConvertVideosAgain = {{ bbb_oc_do_not_convert_videos_again | ternary('true', 'false') }}

# Minimal accepted duration of recordings in seconds
# This value can be used to discard recordings that are shorter than this value.
# This can be helpful when dealing with a lot of short videos due to people peeking into
# conferences before they start and that have set 'autoStartRecording' to 'true'.
minimalDuration = {{ bbb_oc_minimal_duration | int }}

# Monitor Opencast workflow state after ingest to determine whether the workflow was successful.
# EXPERIMENTIAL! This may cause the process spawned from this script to run a lot longer than anticipated.
[monitoring]
# Default: false
monitorOpencastAfterIngest = {{ bbb_oc_monitor_opencast_after_ingest | ternary('true', 'false') }}
# Time between each state check in seconds
secondsBetweenChecks = {{ bbb_oc_seconds_between_checks | int }}
# Fail-safe. Time in seconds until the process is terminated no matter what.
secondsUntilGiveUpMax = {{ bbb_oc_seconds_until_give_up_max | int }}
